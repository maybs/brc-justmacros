BRC_AUDIO_LEVEL_BAND = -9.6;
BRC_AUDIO_LEVEL_TALK = 4.5;
BRC_AUDIO_LEVEL_VIDEO = 0;

BRC_BUTTON_VIDEO = 16;
BRC_BUTTON_BAND = 15;
BRC_BUTTON_TALK = 14;
BRC_BUTTON_BLACK = 13;
BRC_BUTTON_PROJECT_COMPUTER = 12;
BRC_BUTTON_PROJECT_PROGRAM = 11;
BRC_BUTTON_KEY_ON = 10;
BRC_BUTTON_PREVIEW_COMPUTER = 9;
BRC_BUTTON_PREVIEW_LEFT = 8;
BRC_BUTTON_PREVIEW_CENTER = 7;
BRC_BUTTON_PREVIEW_RIGHT = 6;
BRC_BUTTON_PREVIEW_STAGE = 5;
BRC_BUTTON_PREVIEW_FLOOR = 4;
BRC_BUTTON_AUTO_TRANSITION_ON = 3;
BRC_BUTTON_TRANSITION_AUTO = 2;
BRC_BUTTON_TRANSITION_CUT = 1;

BRC_BUTTON_XK24_VIDEO = 1;
BRC_BUTTON_XK24_BAND = 2;
BRC_BUTTON_XK24_TALK = 3;
BRC_BUTTON_XK24_BLACK = 4;
BRC_BUTTON_XK24_KEY_ON = 5;
BRC_BUTTON_XK24_CAMS_ON = 6;
BRC_BUTTON_XK24_PROJECT_SELECT = 7;
BRC_BUTTON_XK24_PROJECT_PROGRAM = 8;
BRC_BUTTON_XK24_PREVIEW_COMPUTER = 13;
BRC_BUTTON_XK24_PREVIEW_KEYS = 14;
BRC_BUTTON_XK24_PREVIEW_DRUMS = 15;
BRC_BUTTON_XK24_AUTO_TRANSITION_ON = 16;
BRC_BUTTON_XK24_TRANSITION_AUTO = 17;
BRC_BUTTON_XK24_TRANSITION_CUT = 18;
BRC_BUTTON_XK24_PREVIEW_LEFT = 19;
BRC_BUTTON_XK24_PREVIEW_CENTER = 20;
BRC_BUTTON_XK24_PREVIEW_RIGHT = 21;

BRC_CAMERA_CONTROLLER_IP = "10.0.1.220";
BRC_CAMERA_IP_LEFT = "10.0.1.201";
BRC_CAMERA_IP_CENTER = "10.0.1.202";
BRC_CAMERA_IP_RIGHT = "10.0.1.203";
BRC_CAMERA_NUMBER_LEFT = 1;
BRC_CAMERA_NUMBER_CENTER = 2;
BRC_CAMERA_NUMBER_RIGHT = 3;

-- -----------------------------------------------------------------------------------------------------------------------
-- ATEM input mapping:
-- 1 = black
-- 2 = in 1
-- 3 = in 2
-- 4 = in 3
-- 5 = in 4
-- 6 = in 5
-- 7 = in 6
-- 8 = in 7
-- 9 = in 8
-- 10 = color bars
-- 11 = color 1
-- 12 = color 2
-- 13 = media player 1
-- 14 = media player 1 key
-- 15 = media player 2
-- 16 = media player 2 key
-- 17 = key 1 mask
-- 18 = dsk 1 mask
-- 19 = dsk2 mask
-- 20 = clean feed 1
-- 21 = clean feed 2
-- 22 =
-- 23 = program
-- 23 = preview
-- -----------------------------------------------------------------------------------------------------------------------
BRC_INPUT_CAMERA_CENTER = 6;
BRC_INPUT_CAMERA_FLOOR = 2;
BRC_INPUT_CAMERA_LEFT = 7;
BRC_INPUT_CAMERA_RIGHT = 9;
BRC_INPUT_CAMERA_STAGE = 8;
BRC_INPUT_CAMERA_WIDE = 3;
BRC_INPUT_COMPUTER_MASTER = 4;
BRC_INPUT_COMPUTER_SLAVE = 5;
BRC_INPUT_PROGRAM = 23;
BRC_AUDIO_RCA = 9;

function BRCMapInputToButton(input)
  if input == BRC_INPUT_CAMERA_CENTER then return BRC_BUTTON_PREVIEW_CENTER
  elseif input == BRC_INPUT_CAMERA_FLOOR then return BRC_BUTTON_PREVIEW_FLOOR
  elseif input == BRC_INPUT_CAMERA_LEFT then return BRC_BUTTON_PREVIEW_LEFT
  elseif input == BRC_INPUT_CAMERA_RIGHT then return BRC_BUTTON_PREVIEW_RIGHT
  elseif input == BRC_INPUT_CAMERA_STAGE then return BRC_BUTTON_PREVIEW_STAGE
  elseif input == BRC_INPUT_COMPUTER_MASTER then return BRC_BUTTON_PREVIEW_COMPUTER
  end;
end;

function BRCMapInputToXk24Button(input)
  if input == BRC_INPUT_CAMERA_CENTER then return BRC_BUTTON_XK24_PREVIEW_CENTER
  elseif input == BRC_INPUT_CAMERA_FLOOR then return BRC_BUTTON_XK24_PREVIEW_FLOOR
  elseif input == BRC_INPUT_CAMERA_LEFT then return BRC_BUTTON_XK24_PREVIEW_LEFT
  elseif input == BRC_INPUT_CAMERA_RIGHT then return BRC_BUTTON_XK24_PREVIEW_RIGHT
  elseif input == BRC_INPUT_CAMERA_STAGE then return BRC_BUTTON_XK24_PREVIEW_DRUMS
  elseif input == BRC_INPUT_COMPUTER_MASTER then return BRC_BUTTON_XK24_PREVIEW_COMPUTER
  end;
end;

function BRCMapInputToCameraNumber(input)
  if input == BRC_INPUT_CAMERA_CENTER then return BRC_CAMERA_NUMBER_CENTER
  elseif input == BRC_INPUT_CAMERA_LEFT then return BRC_CAMERA_NUMBER_LEFT
  elseif input == BRC_INPUT_CAMERA_RIGHT then return BRC_CAMERA_NUMBER_RIGHT
  end;
end;

BRC_PREVIEW_BUTTONS = { BRC_BUTTON_PREVIEW_CENTER, BRC_BUTTON_PREVIEW_COMPUTER, BRC_BUTTON_PREVIEW_FLOOR,
                        BRC_BUTTON_PREVIEW_LEFT, BRC_BUTTON_PREVIEW_RIGHT, BRC_BUTTON_PREVIEW_STAGE };
BRC_PROJECT_BUTTONS = { BRC_BUTTON_PROJECT_COMPUTER, BRC_BUTTON_PROJECT_PROGRAM };
BRC_SCENE_BUTTONS = { BRC_BUTTON_BAND, BRC_BUTTON_BLACK, BRC_BUTTON_TALK, BRC_BUTTON_VIDEO };

BRC_PREVIEW_XK24_BUTTONS = { BRC_BUTTON_XK24_PREVIEW_CENTER, BRC_BUTTON_XK24_PREVIEW_COMPUTER,
                             BRC_BUTTON_XK24_PREVIEW_DRUMS, BRC_BUTTON_XK24_PREVIEW_KEYS,
                             BRC_BUTTON_XK24_PREVIEW_LEFT, BRC_BUTTON_XK24_PREVIEW_RIGHT };
BRC_SCENE_XK24_BUTTONS = { BRC_BUTTON_XK24_BAND, BRC_BUTTON_XK24_BLACK, BRC_BUTTON_XK24_TALK, BRC_BUTTON_XK24_VIDEO };
BRC_CAMERA_IPS = { BRC_CAMERA_IP_LEFT, BRC_CAMERA_IP_CENTER, BRC_CAMERA_IP_RIGHT };

function BRCCameraControllerSelectCamera(cameraNumber)
    if cameraNumber then
      HTTPGet( "http://" .. BRC_CAMERA_CONTROLLER_IP .. "/cgi-bin/aw_cam?cmd=XCN:01:" .. cameraNumber .. "&res=1" );
    end;
end;

function BRCCameraPower(power)
  local powerOn = power and "1" or "0";
  for i, cameraIp in ipairs( BRC_CAMERA_IPS ) do
    HTTPGet( "http://" .. cameraIp .. "/cgi-bin/aw_ptz?cmd=%23O" .. powerOn .. "&res=1" );
  end;
end;

function BRCCameraPreset(cameraIp, pageNumber, presetNumber)
    local preset = (pageNumber - 1) * 10 + (presetNumber - 1)
    HTTPGet( "http://" .. cameraIp .. "/cgi-bin/aw_ptz?cmd=%23R" .. preset .. "&res=1" );
end;

function BRCCameraTally()
    local cameraNumber = EnviroRead( "BRC_PREVIEW_CAMERA" ) or 0;
    for i, cameraIp in ipairs( BRC_CAMERA_IPS ) do
        local tallyOn = i == cameraNumber and "1" or "0";
        HTTPGet( "http://" .. cameraIp .. "/cgi-bin/aw_ptz?cmd=%23DA" .. tallyOn .. "&res=1" );
    end;
end;

function BRCFinishActiveTransition ()
    if ATEMMixerCount() > 0 and ATEMMixerMEGetTransitionStatusActive( 1, 1 ) then
        ATEMMixerMECut( 1, 1 );
        Sleep( 60 );
    end;
end;

function BRCPreview(button, xk24Button, input, autoTransition)
    local xk16 = EnviroRead( "BRC_XK16_Index" );
    local xk24 = EnviroRead( "BRC_XK24_Index" );
    BRCSetLEDRadioGroup( xk16, BRC_PREVIEW_BUTTONS, button );
    BRCSetLEDRadioGroup( xk24, BRC_PREVIEW_XK24_BUTTONS, xk24Button );
    if ATEMMixerCount() > 0 then
        ATEMMixerMESetPreviewInput( 1, 1, input );
    else
        VSLog("Set preview to input " .. input);
    end;

    EnviroWrite( "BRC_PREVIEW_CAMERA", BRCMapInputToCameraNumber( input ) or 0 );

    if autoTransition then
        BRCFinishActiveTransition();
        BRCTransition( autoTransition, EnviroRead( "BRC_KEY_ON" ) == "TRUE" );
    end;
end;

function BRCProject(button, input)
    local xk16 = EnviroRead( "BRC_XK16_Index" );
    BRCSetLEDRadioGroup( xk16, BRC_PROJECT_BUTTONS, button );
    if ATEMMixerCount() > 0 then
        ATEMMixerAUXSetInput( 1, 1, input );
    else
        VSLog("Set AUX1 output to input " .. input);
    end;
end;

function BRCSetLEDRadioGroup (xkeyId, buttons, activeButton)
    if xkeyId > 0 and activeButton then
        for i, button in ipairs( buttons ) do
            local state = button == activeButton and "TRUE" or "FALSE";
            XKeysSetButtonBlueLEDState( xkeyId, button, state );
        end;
    end;
end;

function BRCTransition (type, wantKey)
    local atemConnected = ATEMMixerCount() > 0;
    local keyIsOn = atemConnected and ATEMMixerMEKeyGetOnAir( 1, 1, 1 ) or
            not atemConnected and EnviroRead( "BRC_KEY_ON" ) == "TRUE";
    local transitionLayers;
    if keyIsOn and wantKey or not keyIsOn and not wantKey then
        transitionLayers = 'BACKGROUND';
    else
        transitionLayers = 'BACKGROUND, KEY1';
    end;

    local brcKeyOn = wantKey and "TRUE" or "FALSE";
    EnviroWrite( "BRC_KEY_ON", brcKeyOn );
    local xk16 = EnviroRead( "BRC_XK16_Index" );
    local xk24 = EnviroRead( "BRC_XK24_Index" );
    if xk16 > 0 then
        XKeysSetButtonBlueLEDState( xk16, BRC_BUTTON_KEY_ON, brcKeyOn );
    end;
    if xk24 > 0 then
        XKeysSetButtonBlueLEDState( xk24, BRC_BUTTON_XK24_KEY_ON, brcKeyOn );
    end;

    BRCCameraTally();

    if atemConnected then
        ATEMMixerMESetNextTransitionLayers( 1, 1, transitionLayers );

        if ATEMMixerMEGetFadedToBlack( 1, 1 ) then
            ATEMMixerMECut( 1, 1 );
            Sleep( 60 );
            ATEMMixerMEFadeToBlack( 1, 1 );
        elseif type == "cut" then
            ATEMMixerMECut( 1, 1 );
        else
            ATEMMixerMEAutoTransition( 1, 1 );
        end;
    else
        VSLog("Transition " .. transitionLayers .. " using " .. type .. ".  Key will be " .. (wantKey and "ON" or "OFF") .. ".");
    end;
end;
